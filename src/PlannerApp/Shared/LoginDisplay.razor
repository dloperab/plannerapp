@inject AuthenticationStateProvider AuthenticationStateProvider
@inject NavigationManager NavManager
@inject Blazored.LocalStorage.ILocalStorageService Storage

@using System.Security.Claims

@using PlannerApp.Shared.Infrastructure

<AuthorizeView>
  <Authorized>
    <MudMenu Icon="@Icons.Filled.Person" Color="Color.Inherit"
             Direction="Direction.Right" OffsetY="true">
      <MudMenuItem>Welcome @context.User.FindFirst(ClaimTypes.GivenName).Value</MudMenuItem>
      <MudMenuItem OnClick="LogOutAsync">LogOut</MudMenuItem>
    </MudMenu>
  </Authorized>
  <NotAuthorized>
    <MudIconButton Icon="@Icons.Filled.Login" Color="Color.Inherit"
                   OnClick='() => NavManager.NavigateTo("/authentication/login")' />
  </NotAuthorized>
</AuthorizeView>

@code {

  private async Task LogOutAsync()
  {
    await Storage.RemoveItemAsync(Constants.LocalStorageTokenKey);
    await Storage.RemoveItemAsync(Constants.LocalStorageTokenExpiryDate);

    await AuthenticationStateProvider.GetAuthenticationStateAsync();

    NavManager.NavigateTo("/authentication/login");
  }

}
